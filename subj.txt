	• Использование VirtualBox (или UTM, если вы не можете использовать VirtualBox) является обязательным.
	• Вам нужно только сдать signature.txt файл в корневом каталоге вашего репозитория. Вы
	должны вставить в него подпись виртуального диска вашей машины. Для получения дополнительной информации перейдите к разделу Отправка и
	экспертная оценка.


Этот проект состоит в том, чтобы вы настроили свой первый сервер, следуя определенным правилам.


	Поскольку речь идет о настройке сервера, вы установите
	минимум сервисов. По этой причине графический интерфейс
	здесь бесполезен. Поэтому запрещается устанавливать X.org или любой другой
	эквивалентный графический сервер. В противном случае ваша оценка будет равна 0.


	Вы должны выбрать в качестве операционной системы либо последнюю стабильную версию Debian (без
	тестирования/нестабильную), либо последнюю стабильную версию CentOS. Debian настоятельно рекомендуется
	, если вы новичок в системном администрировании.

Настройка CentOS довольно сложна. Поэтому вам не нужно
настраивать KDump. Однако SELinux должен быть запущен при запуске, и его
конфигурация должна быть адаптирована к потребностям проекта. AppArmor
для Debian также должен быть запущен при запуске.  
// Проверить -  sudo aa-status 

Вы должны создать не менее 2 зашифрованных разделов с помощью LVM. Ниже приведен пример
ожидаемого разделения: 
// Проверка - lsblk

Во время защиты вам будет задано несколько вопросов о
выбранной вами операционной системе. Например, вы должны знать
разницу между aptitude и apt, или что такое SELinux или AppArmor
	Короче говоря, поймите, что вы используете!
// Aptitude - это менеджер пакетов высокого уровня, который может использовать менеджеры пакетов низкого уровня, такие как apt-get;
// Aptitude имеет только текстовый и интерактивный пользовательский интерфейс. 
	Возможности apt-get ограничены возможностями командной строки, в то время как Aptitude - инструмент более высокого уровня, 
	с текстовым интерактивном интерфейсом, а а также возможностью работы через командную строку.

// SELinux или Security Enhanced Linux — это улучшенный механизм управления доступом. 
	Реализация системы принудительного контроля доступа, которая может работать параллельно с классической избирательной системой контроля доступа.
// AppArmor - защитный модуль Linus Kernel, который позволяет системному администратору ограничивать возможности программ с помощью профилей программ;

Служба SSH будет работать только на порту 4242. По соображениям безопасности не должно быть
возможности подключиться с помощью SSH в качестве root.

Использование SSH будет проверено во время защиты путем создания новой
учетной записи. Поэтому вы должны понимать, как это работает. 
// sudo service ssh status

Вы должны настроить свою операционную систему с помощью брандмауэра UFW и, таким образом, оставить открытым только
порт 4242.  
// Проверка порта - sudo ufw status numbered
// добавить - sudo ufw allow 8080
// удалить порт - sudo ufw delete
// Расположение файла - sudo vi /etc/ssh/sshd_config
// Номер порта - sudo grep Port /etc/ssh/sshd_config

Ваш брандмауэр должен быть активен при запуске виртуальной машины.
// sudo ufw status

Имя хоста вашей виртуальной машины должно быть вашим именем входа, заканчивающимся на 42 (например,
wil42). Вам придется изменить это имя хоста во время оценки.
• Вы должны внедрить надежную политику паролей.
• Вы должны установить и настроить sudo в соответствии со строгими правилами.
• В дополнение к пользователю root должен присутствовать пользователь с вашим логином в качестве имени пользователя.
• Этот пользователь должен принадлежать к группам user42 и sudo.
// Проверка групп у пользователя - groups

Во время защиты вам придется создать нового пользователя и назначить его
в группу.
// sudo adduser <username>
// getent passwd <username>
// Проверка пароля - sudo chage -l <username>
// sudo addgroup <user42>
// sudo adduser <username> user42
// getent group user42

Чтобы настроить надежную политику паролей, вы должны соответствовать следующим требованиям:
• Срок действия вашего пароля истекает каждые 30 дней.
• Минимальное количество дней, разрешенных до изменения пароля
, будет установлено равным 2.
• Пользователь должен получить предупреждающее сообщение за 7 дней до истечения срока действия его пароля.
• Ваш пароль должен содержать не менее 10 символов. Он должен содержать заглавную
букву и цифру. Кроме того, он не должен содержать более 3 последовательных одинаковых
символов.
Пароль не должен содержать имя пользователя.
• Следующее правило не применяется к паролю root: пароль должен содержать
не менее 7 символов, которые не являются частью предыдущего пароля.
• Конечно, ваш пароль root должен соответствовать этой политике.
// файл с настройками - vim /etc/login.defs
// Файл с настройкой политики паролей - sudo visudo

	После настройки файлов конфигурации вам придется изменить
	все пароли учетных записей, присутствующих на виртуальной машине,
	включая учетную запись root.

Чтобы настроить надежную конфигурацию для вашей группы sudo, вы должны соответствовать
следующим требованиям:
• Аутентификация с использованием sudo должна быть ограничена 3 попытками в случае неправильного пароля.
• Пользовательское сообщение по вашему выбору должно отображаться, если
при использовании sudo возникает ошибка из-за неправильного пароля.
• Каждое действие с использованием sudo должно быть заархивировано, как входы, так и выходы. Файл журнала
должен быть сохранен в папке /var/log/sudo/.
• Режим TTY должен быть включен по соображениям безопасности. // 1?
• Также по соображениям безопасности пути, которые могут использоваться sudo, должны быть ограничены.
Пример:
/usr/локальный/sbin:/usr/локальный/бин:/usr/sbin:/usr/бин:/sbin:/бин:/привязка/бин

Наконец, вам нужно создать простой скрипт под названием monitoring.sh . Он должен быть разработан в bash.
При запуске сервера скрипт будет отображать некоторую информацию (перечисленную ниже) на всех терминалах каждые 10 минут (посмотрите на стену). Баннер является необязательным.     Ошибка не должна
быть видна.
Ваш скрипт всегда должен иметь возможность отображать следующую информацию:
• Архитектура вашей операционной системы и версия ее ядра.
• Количество физических процессоров.
• Количество виртуальных процессоров.
• Текущая доступная оперативная память на вашем сервере и коэффициент ее использования в процентах.
• Текущая доступная память на вашем сервере и коэффициент ее использования в процентах.
• Текущий коэффициент использования ваших процессоров в процентах.
• Дата и время последней перезагрузки.
• Независимо от того, активен LVM или нет.
• Количество активных подключений.
• Количество пользователей, использующих сервер.
• IPv4-адрес вашего сервера и его MAC-адрес (Управление доступом к Мультимедиа).
• Количество команд, выполняемых с помощью программы sudo.
// bash /usr/local/bin/monitoring.sh
// vim /usr/local/bin/monitoring.sh

Во время защиты вас попросят объяснить, как работает этот скрипт
работает. Вам также придется прервать его, не изменяя.
Взгляните на крона. // 1?
// Прервать работу скрипта - sudo crontab -u root -e

Ниже приведены две команды, которые вы можете использовать для проверки некоторых требований субъекта:
// /usr/sbin/ufw status
